{"version":3,"file":"static/js/527.283f6bb3.chunk.js","mappings":"gMAcA,MAuCA,EAvCeA,IAAgB,IAADC,EAAAC,EAAA,IAAd,MAAEC,GAAOH,EACvB,MAAOI,EAAaC,IAAkBC,EAAAA,EAAAA,MAChC,GAAEC,IAAOC,EAAAA,EAAAA,MACT,KAAEC,EAAI,WAAEC,EAAU,MAAEC,IAAUC,EAAAA,EAAAA,IAAuBL,IAEzDE,KAAMI,EACNH,WAAYI,EACZH,MAAOI,IACLC,EAAAA,EAAAA,IAAuB,CAAET,KAAIU,KAAMb,IAEvC,OAAIM,GACKQ,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,SAGlBT,GACKO,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,YAAU,EAACnB,MAAOA,EAAOoB,KAAK,8BAI5CL,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,yBAAwBJ,SAAA,EAEhDP,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACrB,KAAMA,EAAMN,MAAOA,KAEjCe,EAAAA,EAAAA,KAACa,EAAAA,GAAyB,CACxB5B,MAAOA,EACPM,KAAyB,QAArBR,EAAY,OAAVY,QAAU,IAAVA,OAAU,EAAVA,EAAYmB,eAAO,IAAA/B,EAAAA,EAAI,GAC7BgC,MAAM,SACNC,QAASpB,EACTH,MAAOI,EACPX,YAAaA,EACbC,eAAgBA,EAChB8B,cAAsC,QAAzBjC,EAAY,OAAVW,QAAU,IAAVA,OAAU,EAAVA,EAAYuB,mBAAW,IAAAlC,EAAAA,EAAI,QAG7C,C,0DC9CA,MAAMI,EAAgBA,KAC3B,MAAO+B,IAAgBC,EAAAA,EAAAA,MACjBC,EAAuBF,EAAaG,IAAI,SACvCpC,EAAaC,IAAkBoC,EAAAA,EAAAA,WAAUF,GAAwB,GAUxE,OARAG,EAAAA,EAAAA,YAAU,KAENrC,EADEkC,GAAwBA,EAAuB,GACjCA,EAED,EACjB,GACC,CAACA,IAEG,CAACnC,EAAaC,EAAe,C","sources":["pages/Actors.jsx","hooks/usePagination.js"],"sourcesContent":["import { Grid } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  ActorDetails,\r\n  Error,\r\n  Loader,\r\n  RecommendedAndActorMovies,\r\n} from \"../components\";\r\nimport { usePagination } from \"../hooks/usePagination\";\r\nimport {\r\n  useGetActorDetailQuery,\r\n  useGetActorMoviesQuery,\r\n} from \"../services/TMDB\";\r\n\r\nconst Actors = ({ theme }) => {\r\n  const [currentPage, setCurrentPage] = usePagination();\r\n  const { id } = useParams();\r\n  const { data, isFetching, error } = useGetActorDetailQuery(id);\r\n  const {\r\n    data: moviesData,\r\n    isFetching: isMoviesFetching,\r\n    error: moviesError,\r\n  } = useGetActorMoviesQuery({ id, page: currentPage });\r\n\r\n  if (isFetching) {\r\n    return <Loader size=\"8rem\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Error backButton theme={theme} text=\"Something has gone wrong\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"container-space-around\">\r\n        {/* Actor's Detail, such as the image, biography and ... */}\r\n        <ActorDetails data={data} theme={theme} />\r\n        {/* Actor's Movies */}\r\n        <RecommendedAndActorMovies\r\n          theme={theme}\r\n          data={moviesData?.results ?? []}\r\n          title=\"Movies\"\r\n          loading={isMoviesFetching}\r\n          error={moviesError}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          numberOfPages={moviesData?.total_pages ?? 0}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const usePagination = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const pageFromSearchParams = searchParams.get(\"page\");\r\n  const [currentPage, setCurrentPage] = useState(+pageFromSearchParams || 1);\r\n\r\n  useEffect(() => {\r\n    if (pageFromSearchParams && pageFromSearchParams > 0) {\r\n      setCurrentPage(+pageFromSearchParams);\r\n    } else {\r\n      setCurrentPage(1);\r\n    }\r\n  }, [pageFromSearchParams]);\r\n\r\n  return [currentPage, setCurrentPage];\r\n};\r\n"],"names":["_ref","_moviesData$results","_moviesData$total_pag","theme","currentPage","setCurrentPage","usePagination","id","useParams","data","isFetching","error","useGetActorDetailQuery","moviesData","isMoviesFetching","moviesError","useGetActorMoviesQuery","page","_jsx","Loader","size","Error","backButton","text","_Fragment","children","_jsxs","Grid","container","className","ActorDetails","RecommendedAndActorMovies","results","title","loading","numberOfPages","total_pages","searchParams","useSearchParams","pageFromSearchParams","get","useState","useEffect"],"sourceRoot":""}