{"version":3,"file":"static/js/315.7dfbe333.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["import { ExitToApp } from \"@mui/icons-material\";\r\nimport { Avatar, Box, Button, Tab, Tabs, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { AlertBox, UserMovies } from \"../components\";\r\nimport { userSelector } from \"../features/auth\";\r\nimport { useGetListQuery } from \"../services/TMDB\";\r\nimport { a11yProps } from \"../utils\";\r\n\r\nconst CustomTabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      aria-labelledby={`tab-${index}`}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Profile = ({ theme }) => {\r\n  let type = \"movies\";\r\n  const sessionId = localStorage.getItem(\"session_id\");\r\n  const navigate = useNavigate();\r\n\r\n  if (localStorage.getItem(\"type\") === \"tv\") {\r\n    type = \"tv\";\r\n  }\r\n\r\n  if (!sessionId) navigate(\"/\");\r\n\r\n  const { user } = useSelector(userSelector);\r\n  const {\r\n    data: favoriteMovies,\r\n    isFetching: isFavoriteMoviesFetching,\r\n    error: favoriteMoviesError,\r\n    refetch: favoriteRefetch,\r\n  } = useGetListQuery({\r\n    listName: `favorite/${type}`,\r\n    accountId: user.id,\r\n    sessionId: localStorage.getItem(\"session_id\"),\r\n    page: 1,\r\n  });\r\n  const {\r\n    data: watchListMovies,\r\n    isFetching: isWatchListMoviesFetching,\r\n    error: watchListMoviesError,\r\n    refetch: watchlistRefetch,\r\n  } = useGetListQuery({\r\n    listName: `watchlist/${type}`,\r\n    accountId: user.id,\r\n    sessionId: localStorage.getItem(\"session_id\"),\r\n    page: 1,\r\n  });\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const tabIndex = searchParams.get(\"tab\");\r\n  const [alertBox, setAlertBox] = useState(false);\r\n  const [value, setValue] = useState(tabIndex || 0);\r\n\r\n  useEffect(() => {\r\n    if (tabIndex >= 0 && tabIndex <= 1) {\r\n      setValue(+tabIndex);\r\n    } else {\r\n      setValue(0);\r\n    }\r\n  }, [tabIndex]);\r\n\r\n  // Update lists, immediately after user added a movie to the lists\r\n  useEffect(() => {\r\n    const { unsubscribe: unsubscribeWatchlist } = watchlistRefetch();\r\n    const { unsubscribe: unsubscribeFavorites } = favoriteRefetch();\r\n\r\n    return () => {\r\n      unsubscribeWatchlist();\r\n      unsubscribeFavorites();\r\n    }\r\n  }, []);\r\n\r\n  const handleTabChange = (_, newValue) => {\r\n    setSearchParams({ tab: newValue });\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" flexWrap=\"wrap\" gap=\"1rem\">\r\n        <Box display=\"flex\" overflow=\"hidden\" flex=\"1\" minWidth=\"200px\">\r\n          <Avatar\r\n            sx={{\r\n              border: \"1px solid\",\r\n              p: 1,\r\n              width: { xs: \"45px\", sm: \"60px\" },\r\n              height: { xs: \"45px\", sm: \"60px\" },\r\n            }}\r\n            mb=\"-1rem\"\r\n            alt={user?.username}\r\n            src={`https://www.themoviedb.org/t/p/w64_and_h64_face/${user?.avatar?.tmdb?.avatar_path}`}\r\n          />\r\n          <Box display=\"flex\" flexDirection=\"column\" ml=\"1rem\">\r\n            <Typography\r\n              sx={{ fontSize: { xs: \"26px\", sm: \"34px\" } }}\r\n              gutterBottom\r\n            >\r\n              Your Profile\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              color=\"#7a7a7a\"\r\n              sx={{\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                maxWidth: \"100%\"\r\n              }}\r\n            >\r\n              {user?.username ? `@${user.username}` : \"User\"}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Button\r\n          size=\"small\"\r\n          sx={{ height: \"max-content\" }}\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"error\"}\r\n          variant=\"outlined\"\r\n          onClick={() => setAlertBox(true)}\r\n        >\r\n          Logout &nbsp; <ExitToApp />\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mt: \"2rem\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleTabChange}\r\n          aria-label=\"Movie tabs\"\r\n          textColor=\"inherit\"\r\n        >\r\n          <Tab label=\"Favorites\" {...a11yProps(0)} />\r\n          <Tab label=\"Watchlist\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </Box>\r\n      <CustomTabPanel value={value} index={0}>\r\n        <UserMovies\r\n          theme={theme}\r\n          movies={favoriteMovies}\r\n          fallbackText=\"Add some favorite movies to see them here!\"\r\n          title=\"Favorite Movies\"\r\n          isLoading={isFavoriteMoviesFetching}\r\n          isError={favoriteMoviesError}\r\n        />\r\n      </CustomTabPanel>\r\n      <CustomTabPanel value={value} index={1}>\r\n        <UserMovies\r\n          theme={theme}\r\n          movies={watchListMovies}\r\n          fallbackText={`Add some movies to \"watchlist\" and you'll see them here!`}\r\n          title=\"Watchlist Movies\"\r\n          isLoading={isWatchListMoviesFetching}\r\n          isError={watchListMoviesError}\r\n        />\r\n      </CustomTabPanel>\r\n\r\n      <AlertBox setAlertBox={setAlertBox} alertBox={alertBox} theme={theme} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["CustomTabPanel","props","children","value","index","other","_jsx","role","hidden","concat","_ref","_user$avatar","_user$avatar$tmdb","theme","type","sessionId","localStorage","getItem","navigate","useNavigate","user","useSelector","userSelector","data","favoriteMovies","isFetching","isFavoriteMoviesFetching","error","favoriteMoviesError","refetch","favoriteRefetch","useGetListQuery","listName","accountId","id","page","watchListMovies","isWatchListMoviesFetching","watchListMoviesError","watchlistRefetch","searchParams","setSearchParams","useSearchParams","tabIndex","get","alertBox","setAlertBox","useState","setValue","useEffect","unsubscribe","unsubscribeWatchlist","unsubscribeFavorites","_jsxs","Box","display","justifyContent","alignItems","flexWrap","gap","overflow","flex","minWidth","Avatar","sx","border","p","width","xs","sm","height","mb","alt","username","src","avatar","tmdb","avatar_path","flexDirection","ml","Typography","fontSize","gutterBottom","variant","color","textOverflow","maxWidth","Button","size","palette","mode","onClick","ExitToApp","borderBottom","borderColor","mt","Tabs","onChange","handleTabChange","_","newValue","tab","textColor","Tab","label","a11yProps","UserMovies","movies","fallbackText","title","isLoading","isError","AlertBox"],"sourceRoot":""}