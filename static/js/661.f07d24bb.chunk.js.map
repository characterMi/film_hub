{"version":3,"file":"static/js/661.f07d24bb.chunk.js","mappings":"4IAGO,MAAMA,EAAgBA,KAC3B,MAAOC,IAAgBC,EAAAA,EAAAA,MACjBC,EAAuBF,EAAaG,IAAI,SACvCC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAUJ,GAAwB,GAUxE,OARAK,EAAAA,EAAAA,YAAU,KAENF,EADEH,GAAwBA,EAAuB,GACjCA,EAED,EACjB,GACC,CAACA,IAEG,CAACE,EAAaC,EAAe,C,8GCFtC,MAsCA,EAtCeG,IAAgB,IAAf,MAAEC,GAAOD,EACvB,MAAOJ,EAAaC,IAAkBN,EAAAA,EAAAA,MAChC,GAAEW,IAAOC,EAAAA,EAAAA,OACT,KAAEC,EAAI,WAAEC,EAAU,MAAEC,IAAUC,EAAAA,EAAAA,IAAuBL,IAEzDE,KAAMI,EACNH,WAAYI,EACZH,MAAOI,IACLC,EAAAA,EAAAA,IAAuB,CAAET,KAAIU,KAAMhB,IAEvC,OAAIS,GACKQ,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,SAGlBT,GACKO,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,YAAU,EAAChB,MAAOA,EAAOiB,KAAK,8BAI5CL,EAAAA,EAAAA,KAAAM,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAU,yBAAwBJ,SAAA,EAEhDP,EAAAA,EAAAA,KAACY,EAAAA,GAAY,CAACrB,KAAMA,EAAMH,MAAOA,KAEjCY,EAAAA,EAAAA,KAACa,EAAAA,GAAyB,CACxBzB,MAAOA,EACPG,KAAMI,EACNU,KAAK,SACLS,QAASlB,EACTH,MAAOI,EACPE,KAAMhB,EACNC,eAAgBA,QAGnB,C","sources":["hooks/usePagination.js","pages/Actors.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const usePagination = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const pageFromSearchParams = searchParams.get(\"page\");\r\n  const [currentPage, setCurrentPage] = useState(+pageFromSearchParams || 1);\r\n\r\n  useEffect(() => {\r\n    if (pageFromSearchParams && pageFromSearchParams > 0) {\r\n      setCurrentPage(+pageFromSearchParams);\r\n    } else {\r\n      setCurrentPage(1);\r\n    }\r\n  }, [pageFromSearchParams]);\r\n\r\n  return [currentPage, setCurrentPage];\r\n};\r\n","import { Grid } from \"@mui/material\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  ActorDetails,\r\n  Error,\r\n  Loader,\r\n  RecommendedAndActorMovies,\r\n} from \"../components\";\r\nimport { usePagination } from \"../hooks/usePagination\";\r\nimport {\r\n  useGetActorDetailQuery,\r\n  useGetActorMoviesQuery,\r\n} from \"../services/TMDB\";\r\n\r\nconst Actors = ({ theme }) => {\r\n  const [currentPage, setCurrentPage] = usePagination();\r\n  const { id } = useParams();\r\n  const { data, isFetching, error } = useGetActorDetailQuery(id);\r\n  const {\r\n    data: moviesData,\r\n    isFetching: isMoviesFetching,\r\n    error: moviesError,\r\n  } = useGetActorMoviesQuery({ id, page: currentPage });\r\n\r\n  if (isFetching) {\r\n    return <Loader size=\"8rem\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Error backButton theme={theme} text=\"Something has gone wrong\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container className=\"container-space-around\">\r\n        {/* Actor's Detail, such as the image, biography and ... */}\r\n        <ActorDetails data={data} theme={theme} />\r\n        {/* Actor's Movies */}\r\n        <RecommendedAndActorMovies\r\n          theme={theme}\r\n          data={moviesData}\r\n          text=\"Movies\"\r\n          loading={isMoviesFetching}\r\n          error={moviesError}\r\n          page={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Actors;\r\n"],"names":["usePagination","searchParams","useSearchParams","pageFromSearchParams","get","currentPage","setCurrentPage","useState","useEffect","_ref","theme","id","useParams","data","isFetching","error","useGetActorDetailQuery","moviesData","isMoviesFetching","moviesError","useGetActorMoviesQuery","page","_jsx","Loader","size","Error","backButton","text","_Fragment","children","_jsxs","Grid","container","className","ActorDetails","RecommendedAndActorMovies","loading"],"sourceRoot":""}