{"version":3,"file":"static/js/670.36960e6c.chunk.js","mappings":"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","sources":["pages/Profile.jsx"],"sourcesContent":["import { ExitToApp } from \"@mui/icons-material\";\r\nimport { Avatar, Box, Button, Tab, Tabs, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AlertBox, UserMovies } from \"../components\";\r\nimport { userSelector } from \"../features/auth\";\r\nimport { useAppType } from \"../hooks/useAppType\";\r\nimport { useGetListQuery } from \"../services/TMDB\";\r\n\r\nconst TabPanel = ({ children, value, index, ...props }) => (\r\n  <div\r\n    role=\"tabpanel\"\r\n    hidden={value !== index}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst Profile = ({ theme }) => {\r\n  const type = useAppType();\r\n  const sessionId = localStorage.getItem(\"session_id\");\r\n\r\n  const { user } = useSelector(userSelector);\r\n  const {\r\n    data: favoriteMovies,\r\n    isFetching: isFavoriteMoviesFetching,\r\n    error: favoriteMoviesError,\r\n    refetch: favoriteRefetch,\r\n  } = useGetListQuery({\r\n    listName: `favorite/${type === \"tv\" ? \"tv\" : \"movies\"}`,\r\n    accountId: user.id,\r\n    sessionId,\r\n    page: 1,\r\n  });\r\n  const {\r\n    data: watchListMovies,\r\n    isFetching: isWatchListMoviesFetching,\r\n    error: watchListMoviesError,\r\n    refetch: watchlistRefetch,\r\n  } = useGetListQuery({\r\n    listName: `watchlist/${type === \"tv\" ? \"tv\" : \"movies\"}`,\r\n    accountId: user.id,\r\n    sessionId,\r\n    page: 1,\r\n  });\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [alertBox, setAlertBox] = useState(false);\r\n  const [tabIndex, setTabIndex] = useState(Number(searchParams.get(\"tab\")) === 1 ? 1 : 0);\r\n\r\n  // Update lists, immediately after user added a movie to the lists\r\n  useEffect(() => {\r\n    if (!sessionId) {\r\n      toast.error(\"You need to login to view your profile!\");\r\n      return;\r\n    }\r\n\r\n    const { unsubscribe: unsubscribeWatchlist } = watchlistRefetch();\r\n    const { unsubscribe: unsubscribeFavorites } = favoriteRefetch();\r\n\r\n    return () => {\r\n      unsubscribeWatchlist();\r\n      unsubscribeFavorites();\r\n    }\r\n  }, []);\r\n\r\n  const handleTabChange = (_, newValue) => {\r\n    setSearchParams({ tab: newValue });\r\n    setTabIndex(newValue);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" flexWrap=\"wrap\" gap=\"1rem\">\r\n        <Box display=\"flex\" overflow=\"hidden\" flex=\"1\" minWidth=\"200px\">\r\n          <Avatar\r\n            sx={{\r\n              border: \"1px solid\",\r\n              p: 1,\r\n              width: { xs: \"45px\", sm: \"60px\" },\r\n              height: { xs: \"45px\", sm: \"60px\" },\r\n            }}\r\n            mb=\"-1rem\"\r\n            alt={user?.username}\r\n            src={`https://www.themoviedb.org/t/p/w64_and_h64_face/${user?.avatar?.tmdb?.avatar_path}`}\r\n          />\r\n          <Box display=\"flex\" flexDirection=\"column\" ml=\"1rem\">\r\n            <Typography\r\n              sx={{ fontSize: { xs: \"26px\", sm: \"34px\" } }}\r\n              gutterBottom\r\n            >\r\n              Your Profile\r\n            </Typography>\r\n            <Typography\r\n              variant=\"body1\"\r\n              color=\"#7a7a7a\"\r\n              sx={{\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                maxWidth: \"100%\"\r\n              }}\r\n            >\r\n              {user?.username ? `@${user.username}` : \"User\"}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Button\r\n          size=\"small\"\r\n          sx={{ height: \"max-content\" }}\r\n          color={theme.palette.mode === \"light\" ? \"primary\" : \"error\"}\r\n          variant=\"outlined\"\r\n          onClick={() => setAlertBox(true)}\r\n        >\r\n          Logout &nbsp; <ExitToApp />\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mt: \"2rem\" }}>\r\n        <Tabs\r\n          value={tabIndex}\r\n          onChange={handleTabChange}\r\n          aria-label=\"Movie tabs\"\r\n          textColor=\"inherit\"\r\n        >\r\n          <Tab label=\"Favorites\" aria-controls=\"Favorites tabpanel\" />\r\n          <Tab label=\"Watchlist\" aria-controls=\"Watchlist tabpanel\" />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={tabIndex} index={0}>\r\n        <UserMovies\r\n          theme={theme}\r\n          movies={favoriteMovies?.results ?? []}\r\n          fallbackText=\"Add some favorite movies to see them here!\"\r\n          title=\"Favorite Movies\"\r\n          isLoading={isFavoriteMoviesFetching}\r\n          isError={favoriteMoviesError}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={tabIndex} index={1}>\r\n        <UserMovies\r\n          theme={theme}\r\n          movies={watchListMovies?.results ?? []}\r\n          fallbackText={`Add some movies to \"watchlist\" and you'll see them here!`}\r\n          title=\"Watchlist Movies\"\r\n          isLoading={isWatchListMoviesFetching}\r\n          isError={watchListMoviesError}\r\n        />\r\n      </TabPanel>\r\n\r\n      <AlertBox setAlertBox={setAlertBox} alertBox={alertBox} theme={theme} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["TabPanel","_ref","children","value","index","props","_jsx","role","hidden","_ref2","_user$avatar","_user$avatar$tmdb","_favoriteMovies$resul","_watchListMovies$resu","theme","type","useAppType","sessionId","localStorage","getItem","user","useSelector","userSelector","data","favoriteMovies","isFetching","isFavoriteMoviesFetching","error","favoriteMoviesError","refetch","favoriteRefetch","useGetListQuery","listName","accountId","id","page","watchListMovies","isWatchListMoviesFetching","watchListMoviesError","watchlistRefetch","searchParams","setSearchParams","useSearchParams","alertBox","setAlertBox","useState","tabIndex","setTabIndex","Number","get","useEffect","toast","unsubscribe","unsubscribeWatchlist","unsubscribeFavorites","_jsxs","Box","display","justifyContent","alignItems","flexWrap","gap","overflow","flex","minWidth","Avatar","sx","border","p","width","xs","sm","height","mb","alt","username","src","avatar","tmdb","avatar_path","flexDirection","ml","Typography","fontSize","gutterBottom","variant","color","textOverflow","maxWidth","Button","size","palette","mode","onClick","ExitToApp","borderBottom","borderColor","mt","Tabs","onChange","handleTabChange","_","newValue","tab","textColor","Tab","label","UserMovies","movies","results","fallbackText","title","isLoading","isError","AlertBox"],"sourceRoot":""}