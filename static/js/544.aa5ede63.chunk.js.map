{"version":3,"file":"static/js/544.aa5ede63.chunk.js","mappings":"4IAGO,MAAMA,EAAgBA,KAC3B,MAAOC,IAAgBC,EAAAA,EAAAA,MACjBC,EAAuBF,EAAaG,IAAI,SACvCC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAUJ,GAAwB,GAUxE,OARAK,EAAAA,EAAAA,YAAU,KAENF,EADEH,GAAwBA,EAAuB,GACjCA,EAED,EACjB,GACC,CAACA,IAEG,CAACE,EAAaC,EAAe,C,wHCHtC,MA6CA,EA7CkBG,IAAgB,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAAd,MAAEC,GAAOL,EAC1B,MAAOM,EAAWC,IAAgBT,EAAAA,EAAAA,WAAS,IACpCF,EAAaC,IAAkBN,EAAAA,EAAAA,MAChC,GAAEiB,IAAOC,EAAAA,EAAAA,MACT,KAAEC,EAAI,WAAEC,EAAU,MAAEC,IAAUC,EAAAA,EAAAA,IAAiBL,IAEnDE,KAAMI,EACNH,WAAYI,EACZH,MAAOI,IACLC,EAAAA,EAAAA,IAA2B,CAC7BC,QAASV,EACTW,KAAMvB,EACNwB,KAAM,oBAGR,OAAIT,GAAmBU,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,KAAK,SAEhCX,GAAcS,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,YAAU,EAACpB,MAAOA,EAAOqB,KAAK,8BAGrDC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,GAAG,OAAMC,SAAA,EAEvBV,EAAAA,EAAAA,KAACW,EAAAA,GAAgB,CACftB,KAAMA,EACNH,aAAcA,EACdC,GAAIA,EACJH,MAAOA,KAGTgB,EAAAA,EAAAA,KAACY,EAAAA,GAAyB,CACxB5B,MAAOA,EACPK,KAA8B,QAA1BT,EAAiB,OAAfa,QAAe,IAAfA,OAAe,EAAfA,EAAiBoB,eAAO,IAAAjC,EAAAA,EAAI,GAClCkC,MAAM,sBACNC,QAASrB,EACTH,MAAOI,EACPpB,YAAaA,EACbC,eAAgBA,EAChBwC,cAA2C,QAA9BnC,EAAiB,OAAfY,QAAe,IAAfA,OAAe,EAAfA,EAAiBwB,mBAAW,IAAApC,EAAAA,EAAI,KAGjDmB,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACC,MAAW,OAAJ9B,QAAI,IAAJA,GAAY,QAARP,EAAJO,EAAM+B,cAAM,IAAAtC,GAAS,QAATC,EAAZD,EAAc+B,eAAO,IAAA9B,OAAjB,EAAJA,EAAwB,GAAIE,UAAWA,EAAWC,aAAcA,MAC3E,C","sources":["hooks/usePagination.js","pages/MoviePage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const usePagination = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const pageFromSearchParams = searchParams.get(\"page\");\r\n  const [currentPage, setCurrentPage] = useState(+pageFromSearchParams || 1);\r\n\r\n  useEffect(() => {\r\n    if (pageFromSearchParams && pageFromSearchParams > 0) {\r\n      setCurrentPage(+pageFromSearchParams);\r\n    } else {\r\n      setCurrentPage(1);\r\n    }\r\n  }, [pageFromSearchParams]);\r\n\r\n  return [currentPage, setCurrentPage];\r\n};\r\n","import { Grid } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Error,\r\n  Loader,\r\n  MovieInformation,\r\n  RecommendedAndActorMovies,\r\n  Trailer,\r\n} from \"../components\";\r\nimport { usePagination } from \"../hooks/usePagination\";\r\nimport { useGetMovieQuery, useGetRecommendationsQuery } from \"../services/TMDB\";\r\n\r\nconst MoviePage = ({ theme }) => {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [currentPage, setCurrentPage] = usePagination();\r\n  const { id } = useParams();\r\n  const { data, isFetching, error } = useGetMovieQuery(id);\r\n  const {\r\n    data: recommendations,\r\n    isFetching: isRecommendationsFetching,\r\n    error: recommendationsError,\r\n  } = useGetRecommendationsQuery({\r\n    movieId: id,\r\n    page: currentPage,\r\n    list: \"recommendations\",\r\n  });\r\n\r\n  if (isFetching) return <Loader size=\"8rem\" />;\r\n\r\n  if (error) return <Error backButton theme={theme} text=\"Something has gone wrong\" />;\r\n\r\n  return (\r\n    <Grid container mt=\"10px\">\r\n      {/* All movie information like the poster, name, actors and ... */}\r\n      <MovieInformation\r\n        data={data}\r\n        setOpenModal={setOpenModal}\r\n        id={id}\r\n        theme={theme}\r\n      />\r\n      {/* Recommended movies */}\r\n      <RecommendedAndActorMovies\r\n        theme={theme}\r\n        data={recommendations?.results ?? []}\r\n        title=\"You might also like\"\r\n        loading={isRecommendationsFetching}\r\n        error={recommendationsError}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        numberOfPages={recommendations?.total_pages ?? 0}\r\n      />\r\n      {/* Trailer */}\r\n      <Trailer video={data?.videos?.results?.[0]} openModal={openModal} setOpenModal={setOpenModal} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MoviePage;\r\n"],"names":["usePagination","searchParams","useSearchParams","pageFromSearchParams","get","currentPage","setCurrentPage","useState","useEffect","_ref","_recommendations$resu","_recommendations$tota","_data$videos","_data$videos$results","theme","openModal","setOpenModal","id","useParams","data","isFetching","error","useGetMovieQuery","recommendations","isRecommendationsFetching","recommendationsError","useGetRecommendationsQuery","movieId","page","list","_jsx","Loader","size","Error","backButton","text","_jsxs","Grid","container","mt","children","MovieInformation","RecommendedAndActorMovies","results","title","loading","numberOfPages","total_pages","Trailer","video","videos"],"sourceRoot":""}